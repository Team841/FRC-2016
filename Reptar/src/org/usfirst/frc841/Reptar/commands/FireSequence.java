// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc841.Reptar.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc841.Reptar.subsystems.*;

/**
 * This ComandGroup allows the robot to do one shot at sequence
 */
public class FireSequence extends CommandGroup {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
	public FireSequence() {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
		// Add Commands here:
		// e.g. addSequential(new Command1());
		// addSequential(new Command2());
		// these will run in order.

		// To run multiple commands at the same time,
		// use addParallel()
		// e.g. addParallel(new Command1());
		// addSequential(new Command2());
		// Command1 and Command2 will run in parallel.

		// A command group will require all of the subsystems that each member
		// would require.
		// e.g. if Command1 requires chassis, and Command2 requires arm,
		// a CommandGroup containing them would require both the chassis and the
		// arm.
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
		addSequential(new HopperPostion(false)); //Hopper set to low
		addSequential(new ActuateShooter(true)); //Shooter oriented to shooting position
		addSequential(new WaitCommand(.2)); // Wait for everything to settle
		addSequential(new SetShooterSpeeds(30, 30)); // Set to 30ft/sec to shoot
		addSequential(new HopperPostion(true)); // Feed ball in the shooter
		addSequential(new WaitCommand(0.5)); // wait for it to feed
		addSequential(new ActuateShooter(false)); //bring shooter down to keep it compact
		addSequential(new SetShooterSpeeds(0, 0)); // Stop wheels
		addSequential(new WaitCommand(0.2)); // wait for things to settle
	}
}
